<html>

	<head>
		<title>
		The Abstract Shire : Dedication to Logic : Mathematics : Fuzzy Logic
		</title>

	<link rel=StyleSheet href="Declarations.css" type="text/css">

	</head>

<body>

	<body bgcolor=black>

      <center><img src="Logic.jpg"></center>
      <img src="graybar2.gif" width=100% height=9px>
      <div class=bodyWhiteSmallJustify>

<br><br><br>
#include"RestrictHedge.hpp"<br><br>

RestrictHedgE::RestrictHedgE()<br>
{<br>
ResFPRINT( "RestrictHedgE::RestrictHedgE()" );<br><br>

	&nbsp Setup( NOT );<br>
} // end RestrictHedgE constructor<br><br>

RestrictHedgE::~RestrictHedgE()<br>
{<br>
ResFPRINT( "RestrictHedgE::~RestrictHedgE()" );<br><br>

} // end RestrictHedgE destructor<br><br>

RestrictHedgE::RestrictHedgE( RestrictType RType )<br>
{<br>
ResFPRINT( "RestrictHedgE::RestrictHedgE( RestrictType )" );<br><br>

	&nbsp Setup( RType );<br>
} // end constructor<br><br>

void RestrictHedgE::Setup( RestrictType RType )<br>
{<br>
ResFPRINT( "RestrictHedgE::Setup(RestrictType RType)" );<br><br>

	&nbsp Restrict_Type = RType;<br>
   &nbsp Fct1The_Hedge_Function = new OnevariablE( _OVERFLOW );<br>
} // end Setup<br><br>

long double RestrictHedgE::EvaluateIt( long double ldArg )<br>
{<br>
ResFPRINT( "RestrictHedgE::EvaluateIt( long double ldArg )" );<br>
long double ldRes = 0;<br><br>

   &nbsp switch( Restrict_Type )<br>
   &nbsp {<br>
   	&nbsp &nbsp case NOT :<br>
			&nbsp &nbsp &nbsp (*FzsNext_Set << ldArg) >> ldRes;<br>
      	&nbsp &nbsp &nbsp ldRes = 1 - ldRes;<br>
      &nbsp &nbsp break;<br><br>
      
   	&nbsp &nbsp case ABOVE :<br>
      	&nbsp &nbsp &nbsp if( ldArg >= FzsNext_Set->GetMidPoint() )<br>
         &nbsp &nbsp &nbsp {<br>
				&nbsp &nbsp &nbsp &nbsp (*FzsNext_Set << ldArg) >> ldRes;<br>
            &nbsp &nbsp &nbsp &nbsp ldRes = 1 - ldRes;<br>
         &nbsp &nbsp &nbsp } else<br>
         	&nbsp &nbsp &nbsp &nbsp ldRes = 0;<br>
      &nbsp &nbsp break;<br><br>
      
   	&nbsp &nbsp case BELOW :<br>
      	&nbsp &nbsp &nbsp if( ldArg <= FzsNext_Set->GetMidPoint() )<br>
         &nbsp &nbsp &nbsp {<br>
				&nbsp &nbsp &nbsp &nbsp (*FzsNext_Set << ldArg) >> ldRes;<br>
            &nbsp &nbsp &nbsp &nbsp ldRes = 1 - ldRes;<br>
         &nbsp &nbsp &nbsp } else<br>
         	&nbsp &nbsp &nbsp &nbsp ldRes = 0;<br>
      &nbsp &nbsp break;<br><br>
      
   	&nbsp &nbsp default :<br>
			&nbsp &nbsp &nbsp (*FzsNext_Set << ldArg) >> ldRes;<br>
      &nbsp &nbsp break;<br>
   &nbsp } // end switch<br><br>

	&nbsp return ldRes;<br>
} // end EvaluateIt<br><br>

RestrictHedgE& RestrictHedgE::operator << ( const long double& ldRhs )<br>
{<br>
ResFPRINT( "RestrictHedgE::operator << ( const long double& ldRhs )" );<br>
long double ld1 = 0;<br><br>

   &nbsp ld1 = EvaluateIt( ldRhs );<br>
   &nbsp SetTruthValue( ld1 );<br>
	&nbsp return *this;<br>
} // end RestrictHedgE

<br><br><br>


       </div>
<!--
      <center>
      <table cellpadding=20 cellspacing=10 width=80%>
      <tr> 
      <td bgcolor=#222222 valign=top width=50%>
      <div class=bodyWhiteSmallJustify>
         <p>
         </p>
         <p>
         </p>
         <p>
         </p>
      </div>
      </td>

	<td bgcolor=#222222 valign=top width=50%>
      <div class=bodyWhiteSmallJustify>
         <p>
         </p>
         <p>
         </p>
         <p>
         </p>
         <p>
         </p>
         <p>
         </p>
         <p>
         </p>
       </div>
       </td>
       </tr>
       </table>
       </center>
-->

      <center>
	<table cellpadding=0 cellspacing=10 width=100%>
      <tr>
      <td>
         <div align=left>
         <a href="BWFuzzy9.htm" target="Main"><img src="previous.gif" border=no></a>
         </div>
      </td>
      <td> 
      <center>
         <span class=linkTextWhite>[</span>
         <a href="BWMain.htm" target="Main"><span class=linkTextWhite>Home</span></a>
         <span class=linkTextWhite>|</span>
         <a href="BWMathematics.htm" target="Main"><span class=linkTextWhite>Mathematics</span></a>
         <span class=linkTextWhite>|</span>
         <a href="BWPhysics.htm" target="Main"><span class=linkTextWhite>Physics</span></a>
         <span class=linkTextWhite>|</span>
         <a href="BWPhilosophy.htm" target="Main"><span class=linkTextWhite>Philosophy</span></a>
         <span class=linkTextWhite>]</span>
      </center>
      </td>

      <td>
         <div align=right>
         <a href="BWFuzzy9.htm" target="Main"><img src="next.gif" border=no></a>
         </div>
      </td>

      </tr>

      <tr>
      <td>
      </td>
      <td>
      <span class=footnoteRedSmall>
         <center>
         Design and Content by Brandon Benham<br>
         <a href="mailto:brandbn@attglobal.net"><img src="mailto4.gif" border=no></a>
         </center>
      </span>
      </td>
      </tr>
      </table>
      </center>

</body>


</html>
