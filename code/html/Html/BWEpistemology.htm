<!-- saved from url=(0022)http://internet.e-mail -->
<html>

	<head>
		<title>
		The Abstract Shire : Dedication to Logic : Mathematics : Logic
		</title>

	<link rel=StyleSheet href="Declarations.css" type="text/css">

	</head>

<body>

	<body bgcolor=black>

      <center><img src="Philosophy2.jpg"></center>
      <img src="graybar2.gif" width=100% height=9px>

      <center>
      <table cellpadding=20 cellspacing=10 width=80%>
      <tr> 
      <td bgcolor=#222222 valign=top width=50%>
      <div class=bodyWhiteSmallJustify>
         <p>
         What are the limits of knowledge? This question asks not the limits of <i>animal</i> knowledge or <i>human</i> knowledge or even 
         <i>alien</i> knowledge, but asks only: what are the limits of <i>knowledge</i>? Mathematical logic can answer questions of this magnitude
         without dubiety.
         </p>
         <p>
         To be precise, define knowledge as information. Information exists without respect to sentience, knowledge may (to some) simply be the
         sentient mind perceiving information. Thus, information is defined as the least number of bits required to accurately and completely
         determine an entity. From this definition, it is obvious that the smallest piece of information is a single bit--there is no smaller piece
         of information. For example, consider the number 742, this number, in binary base, can be expressed as: 0111:0100:0010, which is 12 bits
         of information. We could, however, define another base system and define the number as: 1011100110, which is 10 bits of information, thus
         the amount of information depends on our system. (In the above system, a number is represented as: b<sub>0</sub> &#183 1 + b<sub>1</sub> &#183 10 + b<sub>2</sub> &#183 100 +
         b<sub>3</sub> &#183 1000 + ..., where b<sub>x</sub> is either a zero or a one.)
         </p>
         <p>
         To address the issue of epistemology, consider knowledge from an algorithmic information theoretic point of view, which is due in large part
         to Gregory Chaitin's "Randomness and Mathematical Proof" found in <i>Scientific American</i> (May 1975) and Rudy Rucker's <i>Infinity and the
         Mind</i> (Bantam Books 1982).
         </p>
      </div>
      </td>

	<td bgcolor=#222222 valign=top width=50%>
      <div class=bodyWhiteSmallJustify>
         <p>
         A <a href="neural/BWTuring1.htm" target="Main"><span class=linkTextWhite>Universal Turing Machine</span></a> is a machine that 
         reads an infinite tape of zeros and ones. Based on a set of rules (i.e., a program), this 
         machine will read the zero or one under its 'head', move the tape either forward or backward and possibly write a zero or one depending 
         on the symbol it just read. 
         (Although it would take an infinite amount of energy to move an infinite tape, the idea is purely theoretical.)
         </p>
         <p>
         The eminent logician Alan M. Turing proved that this machine, UTM for short, could simulate <i>any</i> computing machine imaginable. Thus, the
         UTM could simulate an IBM 360, or an Intel Pentium, or any other computing machine. Any program P could be executed on this machine. For example,
         a program could be constructed to calculate the square root of two, or the Fourier transform of a given function, or as the Church-Turing thesis
         holds, a finite program could be coded such that the actions of the human mind could be replicated. All of this from the simple actions and rules
         of the UTM.
         </p>
         <p>
         Suppose we are given a fixed and definite UTM, call it M. Then we can code programs to run on M. M could have a standard IBM keyboard attached
         so that commands can be input. Furthermore, define the length of a program P on M as the number of keypresses needed to compose P, denote as
         length(P). 
         </p>
         <p>
         It can be shown that any program imaginable is equivalent to a program that prints out an integer and then halts.
         </p>
       </div>
       </td>
       </tr>
       </table>
       </center>


      <center>
	<table cellpadding=0 cellspacing=10 width=100%>
      <tr>
      <td>
         <div align=left>
         <a href="BWPhilosophy.htm" target="Main"><img src="previous.gif" border=no></a>
         </div>
      </td>
      <td> 
      <center>
         <span class=linkTextWhite>[</span>
         <a href="BWMain.htm" target="Main"><span class=linkTextWhite>Home</span></a>
         <span class=linkTextWhite>|</span>
         <a href="BWMathematics.htm" target="Main"><span class=linkTextWhite>Mathematics</span></a>
         <span class=linkTextWhite>|</span>
         <a href="BWPhysics.htm" target="Main"><span class=linkTextWhite>Physics</span></a>
         <span class=linkTextWhite>|</span>
         <a href="BWPhilosophy.htm" target="Main"><span class=linkTextWhite>Philosophy</span></a>
         <span class=linkTextWhite>]</span>
      </center>
      </td>

      <td>
         <div align=right>
         <a href="BWEpistemology2.htm" target="Main"><img src="next.gif" border=no></a>
         </div>
      </td>

      </tr>

      <tr>
      <td>
      </td>
      <td>
      <span class=footnoteRedSmall>
         <center>
         Design and Content by Brandon Benham<br>
         <a href="mailto:brandbn@attglobal.net"><img src="mailto4.gif" border=no></a>
         </center>
      </span>
      </td>
      </tr>
      </table>
      </center>

</body>


</html>
